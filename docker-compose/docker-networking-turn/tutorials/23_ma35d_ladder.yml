# Norsk Media example: tutorials/23_ma35d_ladder
#
# Build an AMD MA35D-Powered ABR ladder from an RTMP source and publish as HLS and WebRTC
#

networks:
  norskNetwork:
    name: norsk-nw

services:
  norsk:
    container_name: norsk-server
    image: norskvideo/norsk:1.0.401-nightly-34642773
    ports:
      - 1935:1935/tcp # For RTMP sources
      - 5001:5001/udp # For SRT sources
      - 5002:5002/udp # For SRT sources
      - 6790:6790/tcp # GRPC interface
      - 6791:6791/tcp # Debugging endpoints, including the workflow visualizer, logs, and docs
      - 8080:8080/tcp # Public endpoints for HLS/DASH and WebRTC players
    user: "${DOCKER_UID}:${DOCKER_GID}"
    volumes:
      - ${LICENSE_FILE}:/mnt/license.json:ro
      - ./data:/mnt/data
      - ${OUTPUT_ROOT}:/mnt/output
      - ${LOG_ROOT}:/var/log/norsk
      
    command: --license-file /mnt/license.json 
    shm_size: '2gb'
    # cpuset: "0-15"
    networks:
      - norskNetwork
  example:
    container_name: norsk-example-app
    ports:
      - 3000:3000/tcp # Some sources have an internal web UI, published on 3000
    build:
      context: examples
      dockerfile: Dockerfile
      network: host # note this is for build only, not at runtime. Without it npm install can fail on some systems
    user: "${DOCKER_UID}:${DOCKER_GID}"
    environment:
      - NORSK_HOST=norsk
      - PUBLIC_URL_PREFIX=${PUBLIC_URL_PREFIX}
      - DEBUG_URL_PREFIX=${DEBUG_URL_PREFIX}
      - CLIENT_HOST_EXTERNAL=${CLIENT_HOST}
      - CLIENT_HOST_INTERNAL=norsk-example-app
      - TURN_MODE=${TURN_MODE}
      - EZDRM_TOKEN
      - EZDRM_USERNAME
      - EZDRM_PASSWORD
      - EZDRM_WV_PX
      - EZDRM_PR_PX
      - TURN_EXTERNAL=${CLIENT_HOST}
      - TURN_INTERNAL=turn
    depends_on:
      norsk:
        condition: service_healthy
    command: node -e 'require("./lib/src/tutorials/23_ma35d_ladder").main()'
    networks:
      - norskNetwork
  # [Start of source]
  source:
    container_name: norsk-source
    image: datarhei/ffmpeg
    entrypoint: ["/bin/sh","-c"]
    user: "${DOCKER_UID}:${DOCKER_GID}"
    volumes:
      - ./data:/tmp/data:ro
    command:
    - |
        sleep 1
        ffmpeg -v error -re -stream_loop -1 -i data/InkDrop.ts  -vcodec copy -codec copy -f flv 'rtmp://norsk:1935/norsk/source'
    depends_on:
      - example
    networks:
      - norskNetwork
  # [End of source]
  turn:
    container_name: norsk-turn
    image: coturn/coturn
    user: "${DOCKER_UID}:${DOCKER_GID}"
    volumes:
      - ./data/turnserver.conf:/etc/coturn/turnserver.conf:ro
    ports:
      - 3478:3478/udp # STUN/TURN
      - 3478:3478/tcp # TURN tcp transport
      - 5349:5349/tcp # tls
      - 5349:5349/udp # tls
      - 59160-59170:59160-59170/udp  # UDP relay
    networks:
      - norskNetwork
